{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\n\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport tw from 'twrnc';\nimport { Inter_400Regular, Inter_500Medium, Inter_600SemiBold, Inter_700Bold, Inter_800ExtraBold, Inter_900Black } from '@expo-google-fonts/inter';\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport { blogPosts } from \"../blogData\";\nimport axios from \"../axios_instance\";\nimport { BASE_URL } from \"../axios_instance\";\nimport { formatDistanceToNowStrict } from 'date-fns';\n\nfunction Post(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress;\n\n  var _useFonts = useFonts({\n    Inter_400Regular: Inter_400Regular,\n    Inter_500Medium: Inter_500Medium,\n    Inter_600SemiBold: Inter_600SemiBold,\n    Inter_700Bold: Inter_700Bold,\n    Inter_800ExtraBold: Inter_800ExtraBold,\n    Inter_900Black: Inter_900Black\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, null);\n  }\n\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"rounded mt-10 items-center bg-white mx-auto w-5/6\"])))\n  }, React.createElement(View, null, React.createElement(Image, {\n    source: {\n      uri: \"https://f005-2001-f40-90f-a87-3802-ab6b-114b-6871.ngrok.io/storage/\" + item.thumbnail\n    },\n    style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"w-78.1 h-48 rounded rounded-b-none\"])))\n  }), React.createElement(View, {\n    style: tw(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"flex-row items-center flex-wrap h-20 justify-between p-2\"])))\n  }, React.createElement(Text, {\n    style: tw.style('text-xl', {\n      fontFamily: 'Inter_700Bold'\n    })\n  }, item.title), React.createElement(Text, {\n    style: tw(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"text-xs\"])))\n  }, formatDistanceToNowStrict(new Date(item.created_at)), \" ago\")), React.createElement(Text, {\n    style: tw.style('p-2 mb-2 text-sm', {\n      fontFamily: 'Inter_500Medium'\n    })\n  }, item.excerpt)));\n}\n\nfunction Home(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    getAllPosts();\n  }, []);\n\n  function getAllPosts() {\n    axios.get('/posts').then(function (response) {\n      console.log(response);\n      setData(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function goToPost(index) {\n    navigation.navigate('ShowPost', {\n      id: index\n    });\n  }\n\n  var renderPosts = function renderPosts(_ref3) {\n    var item = _ref3.item,\n        index = _ref3.index;\n    return React.createElement(Post, {\n      item: item,\n      onPress: function onPress() {\n        return goToPost(index);\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: tw(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"bg-blue-900 pb-20\"])))\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: renderPosts,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    }\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["D:/Coding/react/invoke/finalProject/my-blog/src/Screens/Home.jsx"],"names":["React","useState","useEffect","tw","Inter_400Regular","Inter_500Medium","Inter_600SemiBold","Inter_700Bold","Inter_800ExtraBold","Inter_900Black","useFonts","AppLoading","blogPosts","axios","BASE_URL","formatDistanceToNowStrict","Post","item","onPress","fontsLoaded","error","uri","thumbnail","style","fontFamily","title","Date","created_at","excerpt","Home","navigation","data","setData","getAllPosts","get","then","response","console","log","catch","goToPost","index","navigate","id","renderPosts"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n    SafeAreaView, \r\n    View, \r\n    FlatList, \r\n    StyleSheet, \r\n    Text, \r\n    StatusBar,\r\n    TouchableOpacity,\r\n    Image\r\n } \r\nfrom 'react-native';\r\nimport tw from 'twrnc';\r\nimport { \r\n  Inter_400Regular,\r\n  Inter_500Medium,\r\n  Inter_600SemiBold,\r\n  Inter_700Bold,\r\n  Inter_800ExtraBold,\r\n  Inter_900Black \r\n} from '@expo-google-fonts/inter';\r\nimport { useFonts } from 'expo-font';\r\nimport AppLoading from 'expo-app-loading';\r\nimport { blogPosts} from '../blogData';\r\n// import axios from 'axios';\r\nimport axios from '../axios_instance';\r\nimport { BASE_URL } from '../axios_instance';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\n// import { MarkdownView } from 'react-native-markdown-view'\r\n\r\nfunction Post({ item, onPress }) {\r\n  let [fontsLoaded, error] = useFonts({\r\n    Inter_400Regular,\r\n    Inter_500Medium,\r\n    Inter_600SemiBold,\r\n    Inter_700Bold,\r\n    Inter_800ExtraBold,\r\n    Inter_900Black \r\n  })\r\n\r\n  if (!fontsLoaded){\r\n    return <AppLoading />\r\n  }\r\n\r\n  return (\r\n    <TouchableOpacity onPress={onPress} style={tw`rounded mt-10 items-center bg-white mx-auto w-5/6`}>\r\n      <View>\r\n        <Image \r\n            source={{uri: `https://f005-2001-f40-90f-a87-3802-ab6b-114b-6871.ngrok.io/storage/${item.thumbnail}` }}\r\n            style={tw`w-78.1 h-48 rounded rounded-b-none`}\r\n        />\r\n        <View style={tw`flex-row items-center flex-wrap h-20 justify-between p-2`}>\r\n          <Text\r\n            style={ tw.style('text-xl', {fontFamily: 'Inter_700Bold'})}\r\n          >\r\n              {item.title}\r\n          </Text>\r\n          <Text style={tw`text-xs`}>\r\n              {formatDistanceToNowStrict( new Date(item.created_at))} ago\r\n          </Text>\r\n        </View>\r\n        \r\n        <Text style={ tw.style('p-2 mb-2 text-sm', {fontFamily: 'Inter_500Medium'})}>\r\n            {item.excerpt}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\n// home page displays a list of blog cards\r\nfunction Home({ navigation }){\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllPosts();\r\n  }, [])\r\n\r\n  function getAllPosts(){\r\n    axios.get('/posts')\r\n      .then(response => {\r\n        console.log(response);\r\n        setData(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  function goToPost(index){\r\n    navigation.navigate('ShowPost', {id: index});\r\n  }\r\n  \r\n  const renderPosts = ({ item, index }) => (\r\n      <Post item={item} onPress={() => goToPost(index)} />\r\n    );\r\n\r\n    return (\r\n      <SafeAreaView style={tw`bg-blue-900 pb-20`}>\r\n        <FlatList\r\n          data={data}\r\n          renderItem={renderPosts}\r\n          // onPress={() => goToPost(item.id)}\r\n          keyExtractor={item => item.id}\r\n        />\r\n      </SafeAreaView>\r\n    );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}