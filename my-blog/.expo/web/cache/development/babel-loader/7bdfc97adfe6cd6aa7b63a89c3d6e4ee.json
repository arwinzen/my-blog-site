{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport * as SecureStore from 'expo-secure-store';\nimport axios from \"../axios_instance\";\nexport var AuthContext = React.createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser,\n      error: error,\n      login: function login(email, password) {\n        axios.post('/sanctum/token', {\n          email: email,\n          password: password,\n          device_name: 'mobile'\n        }).then(function (response) {\n          var userResponse = {\n            email: response.data.user.email,\n            token: response.data.token\n          };\n          console.log(userResponse);\n          setUser(userResponse);\n          setError(null);\n          SecureStore.setItemAsync('user', JSON.stringify(userResponse));\n        }).catch(function (error) {\n          var key = Object.keys(error.response.data.errors)[0];\n          setError(error.response.data.errors[key][0]);\n        });\n      },\n      logout: function logout() {\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + user.token;\n        axios.post('/logout').then(function (response) {\n          setUser(null);\n          SecureStore.deleteItemAsync('user');\n        }).catch(function (error) {\n          console.log(error.response);\n        });\n      }\n    }\n  }, children);\n};","map":{"version":3,"sources":["D:/Coding/react/invoke/finalProject/my-blog/src/Providers/AuthProvider.js"],"names":["React","useState","AsyncStorage","SecureStore","axios","AuthContext","createContext","AuthProvider","children","user","setUser","error","setError","login","email","password","post","device_name","then","response","userResponse","data","token","console","log","setItemAsync","JSON","stringify","catch","key","Object","keys","errors","logout","defaults","headers","common","deleteItemAsync"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;SACSC,Y;AACT,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,KAAP;AAGA,OAAO,IAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,CAAoB,EAApB,CAApB;AAEP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAC1C,kBAAwBP,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BT,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,QAAd;;AAEA,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,IAAI,EAAJA,IADK;AAELC,MAAAA,OAAO,EAAPA,OAFK;AAGLC,MAAAA,KAAK,EAALA,KAHK;AAILE,MAAAA,KAAK,EAAE,eAACC,KAAD,EAAQC,QAAR,EAAqB;AAC1BX,QAAAA,KAAK,CAACY,IAAN,CAAW,gBAAX,EAA6B;AAC3BF,UAAAA,KAAK,EAALA,KAD2B;AAE3BC,UAAAA,QAAQ,EAARA,QAF2B;AAG3BE,UAAAA,WAAW,EAAE;AAHc,SAA7B,EAKCC,IALD,CAKM,UAAAC,QAAQ,EAAI;AAChB,cAAMC,YAAY,GAAG;AACnBN,YAAAA,KAAK,EAAEK,QAAQ,CAACE,IAAT,CAAcZ,IAAd,CAAmBK,KADP;AAEnBQ,YAAAA,KAAK,EAAEH,QAAQ,CAACE,IAAT,CAAcC;AAFF,WAArB;AAIAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACAV,UAAAA,OAAO,CAACU,YAAD,CAAP;AACAR,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACAT,UAAAA,WAAW,CAACsB,YAAZ,CAAyB,MAAzB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,YAAf,CAAjC;AACD,SAdD,EAeCQ,KAfD,CAeO,UAAAjB,KAAK,EAAI;AACd,cAAMkB,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYpB,KAAK,CAACQ,QAAN,CAAeE,IAAf,CAAoBW,MAAhC,EAAwC,CAAxC,CAAZ;AACApB,UAAAA,QAAQ,CAACD,KAAK,CAACQ,QAAN,CAAeE,IAAf,CAAoBW,MAApB,CAA2BH,GAA3B,EAAgC,CAAhC,CAAD,CAAR;AACD,SAlBD;AAmBD,OAxBI;AAyBLI,MAAAA,MAAM,EAAE,kBAAM;AACZ7B,QAAAA,KAAK,CAAC8B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,gBAA2D3B,IAAI,CAACa,KAAhE;AAEAlB,QAAAA,KAAK,CAACY,IAAN,CAAW,SAAX,EACCE,IADD,CACM,UAAAC,QAAQ,EAAI;AAChBT,UAAAA,OAAO,CAAC,IAAD,CAAP;AACAP,UAAAA,WAAW,CAACkC,eAAZ,CAA4B,MAA5B;AACD,SAJD,EAKCT,KALD,CAKO,UAAAjB,KAAK,EAAI;AACdY,UAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACQ,QAAlB;AACD,SAPD;AAQD;AApCI;AADT,KAuCGX,QAvCH,CADF;AA2CD,CA/CM","sourcesContent":["import React, { useState } from 'react';\r\nimport { AsyncStorage } from 'react-native';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport axios from '../axios_instance';\r\n\r\n// create an authorization context\r\nexport const AuthContext = React.createContext({});\r\n\r\nexport const AuthProvider = ({children}) => {\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        error,\r\n        login: (email, password) => {\r\n          axios.post('/sanctum/token', {\r\n            email,\r\n            password,\r\n            device_name: 'mobile',\r\n          })\r\n          .then(response => {\r\n            const userResponse = {\r\n              email: response.data.user.email,\r\n              token: response.data.token,\r\n            }\r\n            console.log(userResponse);\r\n            setUser(userResponse);\r\n            setError(null);\r\n            SecureStore.setItemAsync('user', JSON.stringify(userResponse));\r\n          })\r\n          .catch(error => {\r\n            const key = Object.keys(error.response.data.errors)[0];\r\n            setError(error.response.data.errors[key][0]);\r\n          })\r\n        },\r\n        logout: () => {\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${user.token}`;\r\n\r\n          axios.post('/logout')\r\n          .then(response => {\r\n            setUser(null);\r\n            SecureStore.deleteItemAsync('user')\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response);\r\n          })\r\n        }\r\n      }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}