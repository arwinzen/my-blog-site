{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport tw from 'twrnc';\nimport { Inter_400Regular, Inter_500Medium, Inter_600SemiBold, Inter_700Bold, Inter_800ExtraBold, Inter_900Black } from '@expo-google-fonts/inter';\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport axios, { thumbnail_URL } from \"../axios_instance\";\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { MarkdownView } from 'react-native-markdown-view';\nimport { AuthContext } from \"../Providers/AuthProvider\";\n\nfunction ShowPost(_ref) {\n  var route = _ref.route;\n  console.log(route.params.id);\n  var post_id = route.params.id;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      logout = _useContext.logout;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  useEffect(function () {\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + user.token;\n    getPost();\n  }, []);\n\n  function getPost() {\n    setIsLoading(true);\n    axios.get(\"/posts/\" + post_id).then(function (response) {\n      setData(response.data);\n      setIsLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n      setIsLoading(false);\n    });\n  }\n\n  var renderLoader = function renderLoader() {\n    return isLoading ? React.createElement(View, null, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#aaa\"\n    })) : null;\n  };\n\n  return React.createElement(View, {\n    style: tw.style(\"bg-blue-900 h-full\", {\n      backgroundColor: '#003f5c'\n    })\n  }, isLoading ? React.createElement(View, null, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#aaa\"\n  })) : React.createElement(ScrollView, {\n    style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"rounded bg-white mx-auto mt-3 mb-5 w-10/12\"])))\n  }, React.createElement(Image, {\n    source: {\n      uri: thumbnail_URL + \"/\" + data.thumbnail\n    },\n    style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"w-78.1 h-48 rounded rounded-b-none\"])))\n  }), React.createElement(View, {\n    style: tw(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"flex-row items-center flex-wrap justify-between p-2\"])))\n  }, React.createElement(Text, {\n    style: tw.style('text-2xl', {\n      fontFamily: 'Inter_700Bold'\n    })\n  }, data.title), React.createElement(Text, {\n    style: tw(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"text-xs\"])))\n  }, data.created_at ? formatDistanceToNowStrict(new Date(data.created_at)) + \" ago\" : '')), React.createElement(MarkdownView, {\n    style: tw.style('p-2 mb-2 text-sm', {\n      fontFamily: 'Inter_500Medium'\n    })\n  }, data.body)));\n}\n\nexport default ShowPost;","map":{"version":3,"sources":["D:/Coding/react/invoke/finalProject/my-blog/src/Screens/ShowPost.jsx"],"names":["React","useState","useEffect","useContext","tw","Inter_400Regular","Inter_500Medium","Inter_600SemiBold","Inter_700Bold","Inter_800ExtraBold","Inter_900Black","useFonts","AppLoading","axios","thumbnail_URL","formatDistanceToNowStrict","MarkdownView","AuthContext","ShowPost","route","console","log","params","id","post_id","user","logout","data","setData","isLoading","setIsLoading","defaults","headers","common","token","getPost","get","then","response","catch","error","renderLoader","style","backgroundColor","uri","thumbnail","fontFamily","title","created_at","Date","body"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { \r\n    View, \r\n    Text, \r\n    Image,\r\n    ActivityIndicator,\r\n    ScrollView,\r\n} \r\nfrom 'react-native';\r\nimport tw from 'twrnc';\r\nimport { \r\n  Inter_400Regular,\r\n  Inter_500Medium,\r\n  Inter_600SemiBold,\r\n  Inter_700Bold,\r\n  Inter_800ExtraBold,\r\n  Inter_900Black \r\n} from '@expo-google-fonts/inter';\r\nimport { useFonts } from 'expo-font';\r\nimport AppLoading from 'expo-app-loading';\r\nimport axios, { thumbnail_URL } from '../axios_instance';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\nimport { MarkdownView } from 'react-native-markdown-view';\r\nimport { AuthContext } from '../Providers/AuthProvider';\r\n\r\nfunction ShowPost( { route } ){\r\n    // let [fontsLoaded, error] = useFonts({\r\n    //   Inter_400Regular,\r\n    //   Inter_500Medium,\r\n    //   Inter_600SemiBold,\r\n    //   Inter_700Bold,\r\n    //   Inter_800ExtraBold,\r\n    //   Inter_900Black \r\n    // })\r\n\r\n    // if (!fontsLoaded){\r\n    //   return <AppLoading />\r\n    // }\r\n\r\n    console.log(route.params.id)\r\n    const post_id = route.params.id;\r\n\r\n    const { user, logout } = useContext(AuthContext);\r\n    const [data, setData] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${user.token}`;\r\n        getPost();\r\n    }, [])\r\n\r\n    function getPost(){\r\n        setIsLoading(true);\r\n        axios.get(`/posts/${post_id}`)\r\n        .then(response => {\r\n            // console.log(response);\r\n            setData(response.data);\r\n            setIsLoading(false);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const renderLoader = () => {\r\n        return(\r\n          isLoading ?\r\n            <View>\r\n              <ActivityIndicator size=\"large\" color=\"#aaa\" />\r\n            </View> : null\r\n        );\r\n      }\r\n\r\n    return(\r\n        <View style={tw.style(`bg-blue-900 h-full`, {backgroundColor: '#003f5c'})}>\r\n            { isLoading ? (\r\n              <View>\r\n                <ActivityIndicator size=\"large\" color=\"#aaa\" />\r\n              </View>\r\n            ) : (\r\n              <ScrollView style={tw`rounded bg-white mx-auto mt-3 mb-5 w-10/12`}>\r\n                <Image \r\n                    source={{uri: `${thumbnail_URL}/${data.thumbnail}` }}\r\n                    style={tw`w-78.1 h-48 rounded rounded-b-none`}\r\n                />\r\n                <View style={tw`flex-row items-center flex-wrap justify-between p-2`}>\r\n                    <Text\r\n                        style={ tw.style('text-2xl', {fontFamily: 'Inter_700Bold'})}\r\n                    >\r\n                        {data.title}\r\n                    </Text>\r\n                    <Text style={tw`text-xs`}>\r\n\r\n                        { data.created_at ? \r\n                            (`${formatDistanceToNowStrict(new Date(data.created_at))} ago`) : ''\r\n                        }\r\n                    </Text>\r\n                </View>\r\n                \r\n                <MarkdownView style={ tw.style('p-2 mb-2 text-sm', {fontFamily: 'Inter_500Medium'})}>\r\n                    {data.body}\r\n                </MarkdownView>\r\n              </ScrollView>\r\n            )}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ShowPost;"]},"metadata":{},"sourceType":"module"}